{{- if .Values.proxyinit.enabled }}
initContainers:
- name: proxy-init
  image: {{ .Values.proxyinit.image.repository }}
  imagePullPolicy: {{ .Values.proxyinit.image.pullPolicy }}
  args: [
    "--incoming-proxy-port",
    "{{ .Values.inspector.port }}",
    "--proxy-uid",
    "{{ .Values.inspector.securityContext.runAsUser }}",
    "--inbound-ports-to-ignore",
    {{- if .Values.controlnode.enabled }}
    "{{ (printf "%s,%v" .Values.proxyinit.ignorePorts.inbound .Values.controlnode.service.port) | trimPrefix "," }}",
    {{- else }}
    "{{ .Values.proxyinit.ignorePorts.inbound }}",
    {{- end }}
    "--outbound-ports-to-ignore",
    {{- if .Values.controlnode.enabled }}
    "{{ (printf "%s,%v" .Values.proxyinit.ignorePorts.outbound .Values.controlnode.service.port) | trimPrefix "," }}",
    {{- else }}
    "{{ .Values.proxyinit.ignorePorts.outbound }}",
    {{- end }}
    {{- if and (hasKey .Values.proxyinit "proxyIntercept") (.Values.proxyinit.proxyIntercept.enabled) }}
    "--mode",
    "proxy-intercept",
    "--ingress-listen-ports",
    "{{ .Values.proxyinit.proxyIntercept.ingressListenPorts }}",
    "--inspector-port",
    "{{ .Values.inspector.port }}",
    "--proxy-intercept-uid",
    "{{ .Values.proxyinit.proxyIntercept.userUid }}"
    {{- else }}
    "--mode",
    "proxy"
    {{- end }}
    ]
  securityContext:
    {{- toYaml .Values.proxyinit.securityContext | nindent 12 }}
{{- end }}
containers:
- name: impart-inspector
  image: {{ .Values.inspector.image.repository }}
  imagePullPolicy: {{ .Values.inspector.image.pullPolicy }}
  securityContext:
    {{- toYaml .Values.inspector.securityContext | nindent 12 }}
  env:
  - name: INSPECTOR_STATSD_ADDR
  {{- if .Values.inspector.statsdAddr }}
    value: "{{ .Values.inspector.statsdAddr }}"
  {{- else }}
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP
  {{- end }}
  - name: INSPECTOR_SIDECAR_HTTP_LISTEN_ADDR
    value: ":{{ .Values.inspector.port }}"
  {{- if .Values.inspector.destinationAddr }}
  - name: INSPECTOR_SIDECAR_DESTINATION_ADDR
    value: "{{ .Values.inspector.destinationAddr }}"
  {{- end }}
  - name: INSPECTOR_TCP_LISTEN_ADDR
    value: "{{ .Values.inspector.tcp_listen_addr }}"
  - name: INSPECTOR_MODE
    value: "{{ .Values.inspector.mode }}"
  - name: INSPECTOR_SIDECAR_CONTAINER_BACKEND_SCHEME
    value: ""
  {{- if .Values.inspector.auth.accessTokenSecretRef }}
  - name: INSPECTOR_API_ACCESS_TOKEN
    valueFrom:
      secretKeyRef:
        name: {{ .Values.inspector.auth.accessTokenSecretRef }}
        key: accessToken
  {{- end }}
  {{- if .Values.controlnode.enabled }}
  - name: INSPECTOR_GOSSIP_PEER_ADDR
  {{- $gossipSvcName := include "sidecar-injector.controlnode.fullname" . -}}
  {{- $gossipEndpoint := printf "%s.%s.svc.cluster.local" $gossipSvcName .Release.Namespace }}
    value: {{ $gossipEndpoint }}:{{ .Values.controlnode.port }}
  {{- end }}
  - name: INSPECTOR_LOG_LEVEL
    value: {{ .Values.inspector.logLevel }}
  - name: INSPECTOR_LOG_FORMAT
    value: {{ .Values.inspector.logFormat }}
  - name: INSPECTOR_GOSSIP_ENABLED
    value: {{ .Values.inspector.gossipEnabled }}
  - name: INSPECTOR_METRICS_UPLOAD_ENABLED
    value: {{ .Values.inspector.metricsUploadEnabled }}
  - name: INSPECTOR_RULE_WORKERS_POOL
    value: {{ .Values.inspector.ruleWorkersPool }}
  - name: INSPECTOR_SIGTERM_DELAY_SECONDS
    value: {{ .Values.inspector.sigtermDelaySeconds }}
  - name: INSPECTOR_IMPART_API_URL
    value: {{ .Values.inspector.impartApiUrl }}
  - name: INSPECTOR_TLS_CERT
    value: "/etc/tls-secret/tls.crt"
  - name: INSPECTOR_TLS_KEY
    value: "/etc/tls-secret/tls.key"
  - name: INSPECTOR_AUTH0_TENANT_DOMAIN
    value: {{ .Values.inspector.auth.tenantDomain }}
  - name: INSPECTOR_JWT_AUDIENCE
    value: {{ .Values.inspector.auth.jwtAudience }}
  - name: INSPECTOR_API_CLIENT_ID
    value: {{ .Values.inspector.auth.apiClientId }}
  - name: INSPECTOR_UNIX_SOCKET_PATH
    value: {{ .Values.inspector.unixSocketPath }}
  - name: INSPECTOR_UNIX_SOCKET_PERMISSIONS
    value: {{ .Values.inspector.unixSocketPermissions }}
  - name: INSPECTOR_CLUSTER_GROUP
    value: {{ .Values.inspector.clusterGroup }}
  {{- if and .Values.inspector.statsd .Values.inspector.statsd.tagsCsv }}
  - name: INSPECTOR_STATSD_TAGS
    value: "{{ .Values.inspector.statsd.tagsCsv }}"
  {{- end }}
  {{- if and .Values.inspector.statsd .Values.inspector.statsd.tags }}
  {{- range .Values.inspector.statsd.tags }}
  {{- if or .value .valueFrom }}
  - name: INSPECTOR_STATSD_TAG_{{ .name | upper | replace "-" "_" }}
    {{- if .value }}
    value: "{{ .value }}"
    {{- else if .valueFrom }}
    valueFrom:
      {{- toYaml .valueFrom | nindent 6 }}
    {{- end }}
  {{- else }}
  {{- fail (printf "statsd.tags entry '%s' must have either 'value' or 'valueFrom' defined" .name) }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if .Values.inspector.grpcExtprocMaxBodySize }}
  - name: INSPECTOR_GRPC_EXTPROC_MAX_BODY_SIZE
    value: "{{ .Values.inspector.grpcExtprocMaxBodySize }}"
  {{- end }}
  {{- if .Values.inspector.stateCacheSize }}
  - name: INSPECTOR_INSPECTION_STATE_CACHE_SIZE
    value: "{{ .Values.inspector.stateCacheSize }}"
  {{- end }}
  {{- if .Values.inspector.auth.apiSecretRef }}
  - name: INSPECTOR_API_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: {{ .Values.inspector.auth.apiSecretRef }}
        key: inspectorSecret
  {{- end }}
  {{- if .Values.inspector.auth.accessTokenFileSecretRef }}
  - name: INSPECTOR_API_ACCESS_TOKEN_FILE_PATH
    value: "/etc/api-token-secret/accessToken"
  {{- end }}
  {{- with .Values.inspector.extraEnv }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
  resources:
    {{- toYaml .Values.inspector.resources | nindent 4 }}
  volumeMounts:
  {{- if .Values.inspector.tlsSecretRef }}
  - mountPath: "/etc/tls-secret"
    name: proxy-tls-secret
    readOnly: true
  {{- end }}
  {{- if .Values.inspector.auth.accessTokenFileSecretRef }}
  - mountPath: "/etc/api-token-secret"
    name: api-token-secret-file
    readOnly: true
  {{- end }}
  {{- if .Values.inspector.additionalVolumeMounts }}
    {{- toYaml .Values.inspector.additionalVolumeMounts | nindent 2 }}
  {{- end }}
volumes:
{{- if .Values.inspector.tlsSecretRef }}
- name: proxy-tls-secret
  secret:
    secretName: {{ .Values.inspector.tlsSecretRef }}
{{- end }}
{{- if .Values.inspector.auth.accessTokenFileSecretRef }}
- name: api-token-secret-file
  secret:
    secretName: {{ .Values.inspector.auth.accessTokenFileSecretRef }}
{{- end }}
{{- if .Values.inspector.additionalVolumes }}
  {{- toYaml .Values.inspector.additionalVolumes | nindent 0 }}
{{- end }}
